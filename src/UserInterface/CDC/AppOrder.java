/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.CDC;

import Business.EcoSystem;
import Business.NationalEnterprise.CDC;
import Business.Order.OrderItem;
import Business.Organization.CDCOrganization;
import Business.Organization.DistributorOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ProviderVaccineOrderWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author akash
 */
public class AppOrder extends javax.swing.JPanel {

    /**
     * Creates new form ApproveOrdersJPanel
     */
     private JPanel workContainer;
    private UserAccount userAccount;
    private EcoSystem business;
    private CDC cdcEnterprise;
    private CDCOrganization cdcOrg;
    private ProviderVaccineOrderWorkRequest request;
    
    public AppOrder(JPanel workContainer, UserAccount userAccount,CDC cdcEnterprise,CDCOrganization cdcOrg,EcoSystem business,ProviderVaccineOrderWorkRequest request ) {
        initComponents();
        this.workContainer = workContainer;
        this.userAccount = userAccount;
        this.business = business;
        this.cdcEnterprise =cdcEnterprise;
        this.request =request;
        this.cdcOrg = cdcOrg;
        txt5.setText(String.valueOf(request.getreqState()));
        txt2.setText(String.valueOf(request.getreqState().getStatePopulation()));
        txt3.setText(String.valueOf(request.getreqState().getVaccinesLeftForState()));
        txt1.setText(String.valueOf(request.getVaccineOrder().getOrderNumber()));
        displayContractDetails();
        populateTable();

    }
    
    private void displayContractDetails(){
        
        if(request.ishalfmonthContract())
            txt4.setText("Half Monthly");
        if(request.isfullMonthContract())
            txt4.setText("Monthly");
        if(request.isasReq())
            txt4.setText("As Required");
        
    }
    
    private void populateTable(){
        
         int rowCount = tblvacciine.getRowCount();
        DefaultTableModel defaulttabelmodel = (DefaultTableModel)tblvacciine.getModel();
        
        for(int i=rowCount-1 ; i>=0; i--){
            defaulttabelmodel.removeRow(i);
        }
        
        for(OrderItem oi: request.getVaccineOrder().getItemList())
        {
            Object[] row = new Object[8];
            
                row[0] = oi.getVaccineDetails();
                row[1] = oi;
                row[2] = oi.getVaccineDetails().getVaccineId();
                row[3] = oi.getVaccineDetails().getBatchId();
                row[4] = oi.getVaccineDetails().getVaccinePrice();row[5] = oi.getQuantity();
                row[6] = oi.getVaccineDetails().getManufactureDate();
                row[7] = oi.getVaccineDetails().getVaccinePrice()*oi.getQuantity();
                defaulttabelmodel.addRow(row);
     
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl1 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        txt1 = new javax.swing.JTextField();
        lbl3 = new javax.swing.JLabel();
        txt2 = new javax.swing.JTextField();
        lbl4 = new javax.swing.JLabel();
        txt3 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblvacciine = new javax.swing.JTable();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        txt4 = new javax.swing.JTextField();
        llbl5 = new javax.swing.JLabel();
        lbl6 = new javax.swing.JLabel();
        txt5 = new javax.swing.JTextField();
        Separator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 255, 102));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl1.setFont(new java.awt.Font("Bitstream Charter", 1, 24)); // NOI18N
        lbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl1.setText("Approve Orders");
        add(lbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 673, -1));

        lbl2.setFont(new java.awt.Font("Bitstream Charter", 1, 14)); // NOI18N
        lbl2.setText("Order Number:");
        add(lbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 108, -1, -1));

        txt1.setEnabled(false);
        add(txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 64, -1));

        lbl3.setFont(new java.awt.Font("Bitstream Charter", 1, 14)); // NOI18N
        lbl3.setText("State Population:");
        add(lbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 49, -1, -1));

        txt2.setEnabled(false);
        add(txt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, 84, -1));

        lbl4.setFont(new java.awt.Font("Bitstream Charter", 1, 14)); // NOI18N
        lbl4.setText("Vaccines left for State:");
        add(lbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(437, 49, -1, -1));

        txt3.setEnabled(false);
        add(txt3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 50, 127, -1));

        tblvacciine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Code", "Vaccine Name", "Vaccine id", "Lot Number", "Price", "Quantity", "manufacture date", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblvacciine.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblvacciine);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 880, 207));

        btn1.setBackground(new java.awt.Color(0, 0, 102));
        btn1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn1.setForeground(new java.awt.Color(255, 255, 255));
        btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/ICONS/11122021icons/MicrosoftTeams-image (1).png"))); // NOI18N
        btn1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });
        add(btn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 60, -1));

        btn2.setBackground(new java.awt.Color(0, 0, 102));
        btn2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn2.setForeground(new java.awt.Color(255, 255, 255));
        btn2.setText("Approve");
        btn2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });
        add(btn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 360, 120, -1));

        txt4.setEnabled(false);
        add(txt4, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 100, 116, -1));

        llbl5.setFont(new java.awt.Font("Bitstream Charter", 1, 14)); // NOI18N
        llbl5.setText("Order type:");
        add(llbl5, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 108, -1, -1));

        lbl6.setFont(new java.awt.Font("Bitstream Charter", 1, 14)); // NOI18N
        lbl6.setText("State:");
        add(lbl6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 49, -1, -1));

        txt5.setEnabled(false);
        add(txt5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, 115, -1));
        add(Separator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 84, 673, 10));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/ICONS/11122021icons/approved.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, 800, 195));
    }// </editor-fold>//GEN-END:initComponents

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        // TODO add your handling code here:
        workContainer.remove(this);
        CardLayout layout = (CardLayout) workContainer.getLayout();
        layout.previous(workContainer);
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        
        if(request.getStatus().equalsIgnoreCase("CDC Approved") ||request.getStatus().equalsIgnoreCase("Rejected")|| request.getStatus().equalsIgnoreCase("Shipped") )
        {
            JOptionPane.showMessageDialog(null, "Order has already been processed!");
             return;
        }
        
        int totalOrderedQuantity =0;
        for(OrderItem oi : request.getVaccineOrder().getItemList())
        {
            totalOrderedQuantity = totalOrderedQuantity + oi.getQuantity();
        }
        
        
        if(totalOrderedQuantity > request.getreqState().getVaccinesLeftForState())
        {
            JOptionPane.showMessageDialog(null, "Order has reached maximum value available vaccines for state");
            request.setStatus("Rejected");
            return;
            
        }
        
        
        DistributorOrganization distOrg = null;
        for(Organization org: business.getDistributor().getOrganizationDirectory().getOrganizationList())
        {
            if(org instanceof DistributorOrganization)
            {
                org.getWorkQueue().addWorkRequest(request);
            }
        }
        
  
        request.setApprovedByCDC(true);
        request.setCdcApprovedBy(userAccount);
        request.setStatus("CDC Approved");
        
        int countLeft = request.getreqState().getVaccinesLeftForState();
        request.getreqState().setVaccinesLeftForState(countLeft-totalOrderedQuantity);
        
        JOptionPane.showMessageDialog(null, "Order passed to Distributor!");

    }//GEN-LAST:event_btn2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator Separator1;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lbl4;
    private javax.swing.JLabel lbl6;
    private javax.swing.JLabel llbl5;
    private javax.swing.JTable tblvacciine;
    private javax.swing.JTextField txt1;
    private javax.swing.JTextField txt2;
    private javax.swing.JTextField txt3;
    private javax.swing.JTextField txt4;
    private javax.swing.JTextField txt5;
    // End of variables declaration//GEN-END:variables
}
